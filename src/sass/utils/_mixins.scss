// mixin media query
@mixin mediaQuery($breakpoint) {
  @media screen and (min-width: $breakpoint) {
    @content;
  }
}
// mixin animation
@mixin slideAnimation($name, $startX, $startY, $endX, $endY, $startO, $endO) {
  @keyframes #{$name} {
    0% {
      transform: translate(#{$startX}, #{$startY});
      opacity: #{$startO};
    }
    100% {
      transform: translate(#{$endX}, #{$endY});
      opacity: #{$endO};
    }
  }
}

@mixin font($fs: 14px, $fw: 400px, $lh: 14px) {
  font-size: $fs;
  font-weight: $fw;
  line-height: $lh / $fs;
}
//
// mixin centr
@mixin flexCenter() {
  display: flex;
  justify-content: center;
  align-items: center;
}
// mixin line height
@mixin fontSizeAuto($fs, $lh) {
  font-size: $fs;
  line-height: calc($lh / $fs);
}

// mixin boxShadow
@mixin boxShadow($x, $y, $blur, $spread, $color) {
  box-shadow: $x $y $blur $spread $color;
}

@mixin font(
  $fsMin: 14px,
  $fsPreferred: 2vw,
  $fsMax: 24px,
  $fw: 400,
  $lh: 14px
) {
  font-size: clamp($fsMin, $fsPreferred, $fsMax);
  font-weight: $fw;
  line-height: $lh / (clamp($fsMin, $fsPreferred, $fsMax));
}
// @include font(14px, 2vw, 24px, 400, 21px);

:export {
  flexCenter: #{mixinStr(flexCenter)};
  fontSizeAuto: #{mixinStr(font)};
  mediaQuery: #{mixinStr(mediaQuery)};
  boxShadow: #{mixinStr(boxShadow)};
}
